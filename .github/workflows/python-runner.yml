name: Python runner for scp

on: 
  workflow_call:
    inputs:
      ref:
        description: 'Git reference to checkout (branch, tag, or commit SHA)'
        type: string
        required: false
      connect_timeout:
        description: 'connection timeout to remote host'
        type: string
        default: "30s"
        required: false
      pre_ssh:
        description: 'execute pre-commands before scp'
        type: string
        required: false
      scp:
        description: 'scp from local to remote'
        type: string
        required: false
      post_ssh:
        description: 'execute post-commands after scp'
        type: string
        required: false
    secrets:
      host:
        description: 'ssh remote host'
        required: true
      port:
        description: 'ssh remote port'
        required: false
      user:
        description: 'ssh remote user'
        required: true
      key:
        description: 'content of ssh private key. ex raw content of ~/.ssh/id_rsa'
        required: false
      pass:
        description: 'ssh remote password'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.12'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # You can test your matrix by printing the current Python version
      - name: Run Scp
        env:
          HOST: ${{ secrets.host }}
          PORT: ${{ secrets.port || '22' }}
          USER: ${{ secrets.user }}
          PASS: ${{ secrets.pass }}
          KEY: ${{ secrets.key }}
          CONNECT_TIMEOUT: ${{ inputs.connect_timeout }}
          SCP: ${{ inputs.scp }}
          PRE_SSH: ${{ inputs.pre_ssh }}
          POST_SSH: ${{ inputs.post_ssh }}
        run: python runscp.py
