# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: ssh sparse deploy 

on:
  push:
    branches: [ "main" ]
    paths:
      - 'forward_plugins/**'
      - 'direct_plugins/**'
      - 'common/**'
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'forward_plugins/**'
      - 'direct_plugins/**'
      - 'common/**'

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      scp_files: ${{ steps.scp-cmd.outputs.SCP_FILES }}
    steps:
    - uses: actions/checkout@v3
    - name: get changed files
      id: changed-files
      uses: tj-actions/changed-files@v46

    - name: generate scp upload command
      id: scp-cmd
      run: |
        echo "SCP_FILES=" > scp_files.env
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ "$file" == forward_plugins/* ]]; then
            echo "'$file' => ~/forward/src/plugins/$(basename $(dirname "$file"))" >> scp_files.env
          elif [[ "$file" == direct_plugins/* ]]; then
            echo "'$file' => ~/direct/src/plugins/$(basename $(dirname "$file"))" >> scp_files.env
          elif [[ "$file" == common/* ]]; then
            echo "'$file' => ~/forward/common" >> scp_files.env
            echo "'$file' => ~/direct/common" >> scp_files.env
          fi
        done
        echo "SCP_FILES<<EOF" > $GITHUB_OUTPUT
        cat scp_files.env >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
  scp:
    name: scp files to remote
    needs: changed-files
    uses: ./.github/workflows/python-runner.yml
    if: ${{ ! endsWith(needs.changed-files.outputs.scp_files, 'SCP_FILES=') }}
    secrets:
      host: ${{ secrets.DC_HOST }}
      user: ${{ secrets.DC_USER }}
      key: ${{ secrets.DC_KEY }}
    with:
      connect_timeout: 5m
      pre_ssh: |
        kill $(cat ~/forward/pid) || true
        kill $(cat ~/direct/pid) || true
      scp: ${{ needs.changed-files.outputs.scp_files }}
      post_ssh: |
        cd ~/forward
        source ~/forward/.venv/bin/activate
        nohup ~/.local/bin/nb orm upgrade
        nohup ~/.local/bin/nb run >> ~/forward/logs/forward.log 2>&1 & echo $! > ~/forward/pid;
        cd ~/direct
        source ~/direct/.venv/bin/activate
        nohup ~/.local/bin/nb orm upgrade
        nohup ~/.local/bin/nb run >> ~/direct/logs/direct.log 2>&1 & echo $! > ~/direct/pid;
