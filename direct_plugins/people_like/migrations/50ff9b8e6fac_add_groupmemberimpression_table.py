"""add groupmemberimpression table

迁移 ID: 50ff9b8e6fac
父迁移: 02b84c026502
创建时间: 2025-07-22 17:29:04.789873

"""
from __future__ import annotations

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


revision: str = '50ff9b8e6fac'
down_revision: str | Sequence[str] | None = '02b84c026502'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('people_like_groupmemberimpression',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('impression', sa.String(), nullable=True),
    sa.Column('create_time', sa.Integer(), nullable=False),
    sa.Column('update_time', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_people_like_groupmemberimpression')),
    info={'bind_key': 'people_like'}
    )
    op.drop_table('people_like_emojiinfostorer')
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('people_like_emojiinfostorer',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('raw', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_people_like_emojiinfostorer'))
    )
    op.drop_table('people_like_groupmemberimpression')
    # ### end Alembic commands ###
